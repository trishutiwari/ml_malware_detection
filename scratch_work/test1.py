#I love Alex
 
from keras.models import Sequential 
from keras.layers import Dense
import numpy as np 

seed = 8
np.random.seed(seed)

# This is where we will load the data-set 
# Assuming we will load from csv... 
# dataset = np.loadtxt(...)

# Split the data set into training and testing here: 
# [[packet, packet, packet, packet, packet, packet label]
#  [ packet packet packet packet packet,    packet label]]
trainData = dataset[:]
trainLabel = dataset[:]
#test = dataset[:]

# Create the model here: 
neuralNetModel = Sequential
# numInputs = ? 
# This should create a sequential model that accepts ? inputs and
# has a signle hidden layer with 1000 nodes. The dense command makes it a 
# fully connected graph. We have 1 output node one for our first model
# that does binary classification. 
neuralNetModel.add(Dense(1000, input_dim=numInputs, activation='relu'))
neuralNetModel.add(Dense(1, activation='relu')) 
# This command compiles the model
neuralNetModel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# The following command will train the model on some data: 
neuralNetModel.fit(trainData, trainLabel, epochs=20, batch_size=10)

# Find predictions on some test set 
# predictions = model.predict(test) 






